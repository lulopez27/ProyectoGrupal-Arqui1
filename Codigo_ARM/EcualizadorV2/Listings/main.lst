


ARM Macro Assembler    Page 1 


    1 00000000         ; Etiquetas de memoria, donde se inician los arrays del 
                       algoritmo
    2 00000000         
    3 00000000 20000000 
                       EII     EQU              0x20000000  ;Etiqueta de inicio
                                                             de la imagen
    4 00000000 20025224 
                       EFD     EQU              0x20025224  ;Etiqueta de inicio
                                                             de la frecuencia d
                                                            e distribución
    5 00000000 20025624 
                       EFA     EQU              0x20025624  ;Etiqueta de inicio
                                                             de la frecuencia a
                                                            cumulada 
    6 00000000 20025A24 
                       EDUF    EQU              0x20025A24  ;Etiqueta de inicio
                                                             de la distribución
                                                             uniforme de la fre
                                                            cuencia acumulada
    7 00000000 20025E24 
                       EFA2    EQU              0x20025E24  ;Etiqueta de la fre
                                                            cuencia acumulada p
                                                            arte 2 (acumulada d
                                                            e la frecuencia dis
                                                            tribuida)
    8 00000000 20026224 
                       EBBM    EQU              0x20026224  ;Etiqueta de inicio
                                                             del bloque borrado
                                                            r del mapeo
    9 00000000 20026624 
                       ERM     EQU              0x20026624  ;Etiqueta de inicio
                                                             del resultado del 
                                                            mapeo
   10 00000000 20026A24 
                       EIF     EQU              0x20026A24  ;Etiqueta de inicio
                                                             de la imagen final
                                                             ecualizada
   11 00000000         
   12 00000000         
   13 00000000         
   14 00000000         ; Código del programa principal
   15 00000000         ; Ecualizador V2, se trabaja con imágenes de 390x390 (15
                       2100 pixeles), donde cada pixel es de 1 byte(rango de 0-
                       255)
   16 00000000         
   17 00000000         
   18 00000000                 AREA             Main, CODE, READONLY
   19 00000000                 ENTRY
   20 00000000                 EXPORT           __main
   21 00000000         
   22 00000000         __main
   23 00000000         
   24 00000000         
   25 00000000         ; Etapa 0: Se carga la imagen en memoria
   26 00000000         ; En este caso se rellenan los 152100 pixeles con valore
                       s random. Se van llenando los campos de manera secuencia
                       l con valores de 0-255
   27 00000000         ; Cuando se alcanzan los 256 valores, se vuelve a comenz
                       ar desde cero, y así sucesivamente hasta llenar la image



ARM Macro Assembler    Page 2 


                       n completa
   28 00000000         
   29 00000000 F04F 5100       LDR              R1,=EII
   30 00000004 F04F 0200       MOV              R2,#0       ;Contador de los va
                                                            lores de 0-255, con
                                                              los que se llenar
                                                            á la memoria
   31 00000008 F04F 0300       MOV              R3,#0       ;Contador de los pi
                                                            xeles de la imagen
   32 0000000C F44F 7461       MOV              R4,#900
   33 00000010 F04F 05A9       MOV              R5,#169
   34 00000014 FB04 F605       MUL              R6,R4,R5    ; R6 almacena el re
                                                            sultado de 900x169=
                                                            152100. Se hizo de 
                                                            esta manera debido 
                                                            a las limitaciones 
                                                            de ARM para generar
                                                             los inmediatos
   35 00000018         
   36 00000018         ;CAI: Ciclo de almacenamiento de la imagen
   37 00000018         
   38 00000018 42B3    CAI     CMP              R3,R6       ; El ciclo se termi
                                                            na cuando se llenan
                                                             los 152100 pixeles
                                                             de la imagen
   39 0000001A D00B            BEQ              IE1
   40 0000001C F5B2 7F80       CMP              R2,#256     ; Cuando se alcanza
                                                            n los 256 valores, 
                                                            se resetea el conta
                                                            dor a cero de nuevo
                                                            
   41 00000020 D005            BEQ              RRP         ; RRP: Reset de los
                                                             valores del Rango 
                                                            de Pixeles
   42 00000022 50CA    CCAI    STR              R2,[R1,R3]
   43 00000024 F102 0201       ADD              R2,R2,#1    ; Se incrementa en 
                                                            1, el valor del con
                                                            tador de los valore
                                                            s random con que se
                                                             llenará la imagen
   44 00000028 F103 0301       ADD              R3,R3,#1    ; El contador de la
                                                             imagen es de 1 en 
                                                            1, ya que se almace
                                                            na byte por byte
   45 0000002C E7F4            B                CAI
   46 0000002E         
   47 0000002E F04F 0200 
                       RRP     MOV              R2,#0
   48 00000032 E7F6            B                CCAI        ;CCAI: Continuación
                                                             del CAI 
   49 00000034         
   50 00000034         
   51 00000034         
   52 00000034         
   53 00000034         ; Etapa 1: Se obtiene la frecuencia de distribución de l
                       a imagen
   54 00000034         
   55 00000034 F04F 5100 
                       IE1     LDR              R1,=EII



ARM Macro Assembler    Page 3 


   56 00000038 4A7E            LDR              R2,=EFD
   57 0000003A F04F 0300       MOV              R3,#0       ;Contador de la ima
                                                            gen
   58 0000003E F04F 0404       MOV              R4,#4
   59 00000042 F04F 0500       MOV              R5,#0       ;Pixel actual
   60 00000046 F04F 0600       MOV              R6,#0       ;Frecuencia del pix
                                                            el actual
   61 0000004A F04F 0000       MOV              R0,#0
   62 0000004E F04F 0700       MOV              R7,#0
   63 00000052         
   64 00000052         
   65 00000052 F5B0 6F80 
                       LEFD    CMP              R0,#1024
   66 00000056 D003            BEQ              CFD
   67 00000058 5017            STR              R7,[R2,R0]
   68 0000005A F100 0004       ADD              R0,R0,#4
   69 0000005E E7F8            B                LEFD
   70 00000060         
   71 00000060         ;CFD: Ciclo de Frecuencia de Distribución
   72 00000060         
   73 00000060 F44F 7A61 
                       CFD     MOV              R10,#900
   74 00000064 F04F 0BA9       MOV              R11,#169
   75 00000068 FB0A FC0B       MUL              R12,R10,R11
   76 0000006C 4563            CMP              R3,R12
   77 0000006E D009            BEQ              IE2
   78 00000070 5CCD            LDRB             R5,[R1,R3]
   79 00000072 FB05 F704       MUL              R7,R5,R4
   80 00000076 59D6            LDR              R6,[R2,R7]
   81 00000078 F106 0601       ADD              R6,R6,#1
   82 0000007C 51D6            STR              R6,[R2,R7]
   83 0000007E F103 0301       ADD              R3,R3,#1
   84 00000082 E7ED            B                CFD
   85 00000084         
   86 00000084         
   87 00000084         ; Etapa 2: Se obtiene la frecuencia acumulada
   88 00000084         
   89 00000084 496C    IE2     LDR              R1,=EFA
   90 00000086 F04F 0300       MOV              R3,#0       ;Contador del bloqu
                                                            e de frecuencia de 
                                                            distribución
   91 0000008A F04F 0400       MOV              R4,#0       ;Contador del bloqu
                                                            e de frecuencia acu
                                                            mulada
   92 0000008E 58D5            LDR              R5,[R2,R3]  ;Se obtiene el prim
                                                            er valor de la frec
                                                            uencia de distribuc
                                                            ión
   93 00000090 510D            STR              R5,[R1,R4]  ;Se hace copia dire
                                                            cta del primer valo
                                                            r del f(I) en el ar
                                                            ray del CuF
   94 00000092 F103 0304       ADD              R3,R3,#4    ;Se incrementa el c
                                                            ontador del f(I), y
                                                            a que se va sumando
                                                             el valor actual de
                                                             f(I) con el valor 
                                                            anterior del CuF
   95 00000096         



ARM Macro Assembler    Page 4 


   96 00000096         ; CDSF: Ciclo de sumar frecuencias
   97 00000096         ;Básicamente para obtener el nuevo valor del CuF, se sum
                       a el valor actual del f(I) con el valor anterior del CuF
                       
   98 00000096         ;Es por esto que el contador del f(I) va adelantado en 1
                        al del CuF. Como se  mencionó previamente, el primer va
                       lor se hace copia directa
   99 00000096         
  100 00000096 F5B3 6F80 
                       CDSF    CMP              R3,#1024    ;El límite son 256x
                                                            4=1024. Cantidad to
                                                            tales de bloques de
                                                             los arrays
  101 0000009A D009            BEQ              IE3
  102 0000009C 58D5            LDR              R5,[R2,R3]
  103 0000009E 590E            LDR              R6,[R1,R4]
  104 000000A0 EB05 0706       ADD              R7,R5,R6
  105 000000A4 F104 0404       ADD              R4,R4,#4
  106 000000A8 510F            STR              R7,[R1,R4]
  107 000000AA F103 0304       ADD              R3,R3,#4
  108 000000AE E7F2            B                CDSF
  109 000000B0         
  110 000000B0         
  111 000000B0         ; Etapa 3: Se distribuye uniformemente la frecuencia acu
                       mulada
  112 000000B0         
  113 000000B0 4B62    IE3     LDR              R3,=EDUF
  114 000000B2 F8D1 43FC       LDR              R4,[R1,#1020] ;El valor de 1020
                                                             se obtiene de 255x
                                                            4. Me permite obten
                                                            er la última posici
                                                            ón del array del Cu
                                                            F
  115 000000B6 F44F 7580       MOV              R5,#256     ;El módulo se calcu
                                                            la con 256, que es 
                                                            la cantidad máxima 
                                                            de posibilidades pa
                                                            ra 1 byte
  116 000000BA         
  117 000000BA         ;Se calcula el módulo del valor máximo de CuF entre el v
                       alor máximo del rango
  118 000000BA FBB4 F6F5       UDIV             R6,R4,R5
  119 000000BE FB06 F705       MUL              R7,R6,R5
  120 000000C2 EBA4 0807       SUB              R8,R4,R7
  121 000000C6         
  122 000000C6         ;Se calcula la parte entera de el valor máximo de CuF en
                       tre el valor máximo del rango(N = 256 = 2**8)
  123 000000C6         ;Para hacer esta división se utiliza el corrimiento arit
                       mético a la derecha con 8 bits
  124 000000C6 EA4F 2924       ASR              R9,R4,#8
  125 000000CA         
  126 000000CA         ;Se utiliza el R6 como contador del bloque Feq
  127 000000CA F04F 0600       MOV              R6,#0
  128 000000CE         
  129 000000CE         ;Se toman dos caminos dependiendo del módulo
  130 000000CE F1B8 0F00       CMP              R8,#0
  131 000000D2 D000            BEQ              CM0         ;CM0:  Ciclo cuando
                                                             el módulo es cero
  132 000000D4 E007            B                CMD0        ;CMDO: Ciclo cuando



ARM Macro Assembler    Page 5 


                                                             el módulo es difer
                                                            ente de cero
  133 000000D6         
  134 000000D6         ;Cuando el módulo es cero, se distribuye uniformemente e
                       l valor obtenido al dividir el máximo de CuF entre 256
  135 000000D6         
  136 000000D6 F5B6 6F80 
                       CM0     CMP              R6,#1024
  137 000000DA D016            BEQ              IE4
  138 000000DC F843 9006       STR              R9,[R3,R6]
  139 000000E0 F106 0604       ADD              R6,R6,#4
  140 000000E4 E7F7            B                CM0
  141 000000E6         
  142 000000E6         ;Cuando el módulo es diferente de cero, se debe obtener 
                       el valor faltante para completar el máximo del CuF a la 
                       hora de hacer la distribución
  143 000000E6         ;La ecuación es: X = MaxCuF - (cocienteEntero x 255 )
  144 000000E6         ;Este valor se puede almacenar en cualquier lugar, por s
                       implicidad se almacena de primero
  145 000000E6         
  146 000000E6 F04F 07FF 
                       CMD0    MOV              R7,#255
  147 000000EA FB09 FA07       MUL              R10,R9,R7
  148 000000EE EBA4 0B0A       SUB              R11,R4,R10
  149 000000F2 F843 B006       STR              R11,[R3,R6]
  150 000000F6 F106 0604       ADD              R6,R6,#4
  151 000000FA         
  152 000000FA         ;Ciclo para almacenar el cocienteEntero de MaxCuF/256, e
                       n el resto de campos del array del Feq
  153 000000FA         
  154 000000FA F5B6 6F80 
                       CMD02   CMP              R6,#1024
  155 000000FE D004            BEQ              IE4
  156 00000100 F843 9006       STR              R9,[R3,R6]
  157 00000104 F106 0604       ADD              R6,R6,#4
  158 00000108 E7F7            B                CMD02
  159 0000010A         
  160 0000010A         ; Etapa 4: Se obtiene la frecuencia acumulada de la frec
                       uencia distribuida
  161 0000010A         ; Mismo algoritmo de la etapa 2, solo que en este caso s
                       e obtiene la frecuencia acumulada del Feq
  162 0000010A         
  163 0000010A 4C4D    IE4     LDR              R4,=EFA2
  164 0000010C F04F 0500       MOV              R5,#0       ; Contador del bloq
                                                            ue de frecuencia di
                                                            stribuida
  165 00000110 F04F 0600       MOV              R6,#0       ; Contador del bloq
                                                            ue de frecuencia ac
                                                            umulada parte 2
  166 00000114 595F            LDR              R7,[R3,R5]
  167 00000116 51A7            STR              R7,[R4,R6]
  168 00000118 F105 0504       ADD              R5,R5,#4
  169 0000011C         
  170 0000011C         ; CDSF2: Ciclo de sumar frecuencias2
  171 0000011C         
  172 0000011C F5B5 6F80 
                       CDSF2   CMP              R5,#1024
  173 00000120 D00B            BEQ              IE5
  174 00000122 595F            LDR              R7,[R3,R5]



ARM Macro Assembler    Page 6 


  175 00000124 F854 8006       LDR              R8,[R4,R6]
  176 00000128 EB07 0908       ADD              R9,R7,R8
  177 0000012C F106 0604       ADD              R6,R6,#4
  178 00000130 F844 9006       STR              R9,[R4,R6]
  179 00000134 F105 0504       ADD              R5,R5,#4
  180 00000138 E7F0            B                CDSF2
  181 0000013A         
  182 0000013A         
  183 0000013A         ; Etapa 5: Se obtiene el array del mapeo
  184 0000013A         ; La esencia del algoritmo, es encontrar el valor más ce
                       rcano del CuFeq a CuF
  185 0000013A         
  186 0000013A         
  187 0000013A         
  188 0000013A 493F    IE5     LDR              R1,=EFA     ;CuF
  189 0000013C 4A40            LDR              R2,=EFA2    ;CuFeq
  190 0000013E 4B41            LDR              R3,=ERM     ;Resultado final de
                                                            l mapeo
  191 00000140 F04F 0400       MOV              R4,#0       ;Contador del CuF y
                                                             del resultado del 
                                                            mapeo
  192 00000144 F04F 0500       MOV              R5,#0       ;Límite inferior
  193 00000148 F04F 06FF       MOV              R6,#255     ;Límite Superior
  194 0000014C F04F 0700       MOV              R7,#0       ;Centro
  195 00000150 F04F 0800       MOV              R8,#0       ;Valor buscado
  196 00000154 F04F 0900       MOV              R9,#0       ;Valor del límite i
                                                            nferior
  197 00000158 F04F 0A00       MOV              R10,#0      ;Valor del límite  
                                                            superior
  198 0000015C F04F 0B00       MOV              R11,#0      ;Nuevo pixel mapead
                                                            o
  199 00000160 F04F 0C00       MOV              R12,#0      ;Valor del centro
  200 00000164         
  201 00000164         
  202 00000164         ;CPM: Ciclo principal del mapeo
  203 00000164         
  204 00000164         
  205 00000164 F5B4 6F80 
                       CPM     CMP              R4,#1024
  206 00000168 D048            BEQ              IE6
  207 0000016A F851 8004       LDR              R8,[R1,R4]
  208 0000016E E008            B                BBM
  209 00000170 F843 B004 
                       FBBM    STR              R11,[R3,R4]
  210 00000174 F104 0404       ADD              R4,R4,#4
  211 00000178 F04F 0500       MOV              R5,#0
  212 0000017C F04F 06FF       MOV              R6,#255
  213 00000180 E7F0            B                CPM
  214 00000182         
  215 00000182         ;BBM: Búsqueda binaria modificada
  216 00000182         
  217 00000182 EB05 0706 
                       BBM     ADD              R7,R5,R6
  218 00000186 EA4F 0767       ASR              R7,R7,#1
  219 0000018A F04F 0B04       MOV              R11,#4
  220 0000018E FB07 FB0B       MUL              R11,R7,R11
  221 00000192 F852 C00B       LDR              R12,[R2,R11]
  222 00000196 45C4            CMP              R12,R8
  223 00000198 D004            BEQ              AR1



ARM Macro Assembler    Page 7 


  224 0000019A 42AF            CMP              R7,R5
  225 0000019C D008            BEQ              ESR1
  226 0000019E 45C4            CMP              R12,R8
  227 000001A0 DC02            BGT              ALS
  228 000001A2 E003            B                ALI
  229 000001A4         
  230 000001A4         ;AR1: Asignar resultado 1
  231 000001A4         
  232 000001A4 46BB    AR1     MOV              R11,R7
  233 000001A6 E7E3            B                FBBM
  234 000001A8         
  235 000001A8         ;ALS: Asignar límite superior
  236 000001A8         
  237 000001A8 463E    ALS     MOV              R6,R7
  238 000001AA E7EA            B                BBM
  239 000001AC         
  240 000001AC         ;ALI: Asignar límite inferior
  241 000001AC         
  242 000001AC 463D    ALI     MOV              R5,R7
  243 000001AE E7E8            B                BBM
  244 000001B0         
  245 000001B0         ;ESR1:Etapa de sumas y restas parte 1
  246 000001B0         
  247 000001B0 F04F 0B04 
                       ESR1    MOV              R11,#4
  248 000001B4 FB05 FB0B       MUL              R11,R5,R11
  249 000001B8 F852 900B       LDR              R9,[R2,R11]
  250 000001BC F04F 0B04       MOV              R11,#4
  251 000001C0 FB06 FB0B       MUL              R11,R6,R11
  252 000001C4 F852 A00B       LDR              R10,[R2,R11]
  253 000001C8         
  254 000001C8         ;ESR2:Etapa de sumas y restas parte 2
  255 000001C8         
  256 000001C8 45C1    ESR2    CMP              R9,R8
  257 000001CA D007            BEQ              AR2
  258 000001CC 45C1            CMP              R9,R8
  259 000001CE DC09            BGT              ER1I
  260 000001D0 E00B            B                ES1I
  261 000001D2 45C2    FESR2   CMP              R10,R8
  262 000001D4 D004            BEQ              AR3
  263 000001D6 45C2            CMP              R10,R8
  264 000001D8 DC0A            BGT              ER1S
  265 000001DA E00C            B                ES1S
  266 000001DC         
  267 000001DC         ;AR2: Asignar resultado 2
  268 000001DC         
  269 000001DC 46AB    AR2     MOV              R11,R5
  270 000001DE E7C7            B                FBBM
  271 000001E0         
  272 000001E0         ;AR3: Asignar resultado 3
  273 000001E0         
  274 000001E0 46B3    AR3     MOV              R11,R6
  275 000001E2 E7C5            B                FBBM
  276 000001E4         
  277 000001E4         ;ER1I: Restar 1 al dato del límite inferior
  278 000001E4         
  279 000001E4 F1A9 0901 
                       ER1I    SUB              R9,R9,#1
  280 000001E8 E7F3            B                FESR2



ARM Macro Assembler    Page 8 


  281 000001EA         
  282 000001EA         ;ES1I: Sumar 1 al dato del límite inferior
  283 000001EA         
  284 000001EA F109 0901 
                       ES1I    ADD              R9,R9,#1
  285 000001EE E7F0            B                FESR2
  286 000001F0         
  287 000001F0         
  288 000001F0         ;ER1S: Restar 1 al dato del límite superior
  289 000001F0         
  290 000001F0 F1AA 0A01 
                       ER1S    SUB              R10,R10,#1
  291 000001F4 E7E8            B                ESR2
  292 000001F6         
  293 000001F6         ;ES1S: Sumar 1 al dato del límite superior
  294 000001F6         
  295 000001F6 F10A 0A01 
                       ES1S    ADD              R10,R10,#1
  296 000001FA E7E5            B                ESR2
  297 000001FC         
  298 000001FC         
  299 000001FC         
  300 000001FC         
  301 000001FC         ; Etapa 6: Se mapea la imagen original en su forma ecual
                       izada
  302 000001FC         ; Básicamente para cada valor de la imagen original, se 
                       multiplica por 4, para obtener la posición del array del
                        mapeo
  303 000001FC         ; El valor obtenido del array del mapeo, será el nuevo p
                       ixel
  304 000001FC         
  305 000001FC F04F 5100 
                       IE6     LDR              R1,=EII
  306 00000200 4A11            LDR              R2,=EIF
  307 00000202 4B10            LDR              R3,=ERM
  308 00000204 F04F 0400       MOV              R4,#0       ;Contador de la ima
                                                            gen
  309 00000208 F04F 0504       MOV              R5,#4
  310 0000020C         
  311 0000020C         ; CE: Ciclo de la ecualización
  312 0000020C         
  313 0000020C F44F 7A61 
                       CE      MOV              R10,#900
  314 00000210 F04F 0BA9       MOV              R11,#169
  315 00000214 FB0A FC0B       MUL              R12,R10,R11
  316 00000218 4564            CMP              R4,R12
  317 0000021A D009            BEQ              STOP
  318 0000021C 5D0E            LDRB             R6,[R1,R4]
  319 0000021E FB06 F705       MUL              R7,R6,R5
  320 00000222 F853 8007       LDR              R8,[R3,R7]
  321 00000226 F842 8004       STR              R8,[R2,R4]
  322 0000022A F104 0401       ADD              R4,R4,#1
  323 0000022E E7ED            B                CE
  324 00000230         
  325 00000230 E7FE    STOP    B                STOP
  326 00000232         
  327 00000232                 END
              00 00 20025224 
              20025624 



ARM Macro Assembler    Page 9 


              20025A24 
              20025E24 
              20026624 
              20026A24 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\main.d -o.\objects\main.o -I.\RTE\_Cortex_M3 -IC:\Users\
User\AppData\Local\Arm\Packs\ARM\CMSIS\5.7.0\CMSIS\Core\Include -IC:\Users\User
\AppData\Local\Arm\Packs\ARM\CMSIS\5.7.0\Device\ARM\ARMCM3\Include --predefine=
"__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="__UVISION_VERSION 
SETA 529" --predefine="_RTE_ SETA 1" --predefine="ARMCM3 SETA 1" --list=.\listi
ngs\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ALI 000001AC

Symbol: ALI
   Definitions
      At line 242 in file main.s
   Uses
      At line 228 in file main.s
Comment: ALI used once
ALS 000001A8

Symbol: ALS
   Definitions
      At line 237 in file main.s
   Uses
      At line 227 in file main.s
Comment: ALS used once
AR1 000001A4

Symbol: AR1
   Definitions
      At line 232 in file main.s
   Uses
      At line 223 in file main.s
Comment: AR1 used once
AR2 000001DC

Symbol: AR2
   Definitions
      At line 269 in file main.s
   Uses
      At line 257 in file main.s
Comment: AR2 used once
AR3 000001E0

Symbol: AR3
   Definitions
      At line 274 in file main.s
   Uses
      At line 262 in file main.s
Comment: AR3 used once
BBM 00000182

Symbol: BBM
   Definitions
      At line 217 in file main.s
   Uses
      At line 208 in file main.s
      At line 238 in file main.s
      At line 243 in file main.s

CAI 00000018

Symbol: CAI
   Definitions
      At line 38 in file main.s
   Uses
      At line 45 in file main.s
Comment: CAI used once
CCAI 00000022



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


Symbol: CCAI
   Definitions
      At line 42 in file main.s
   Uses
      At line 48 in file main.s
Comment: CCAI used once
CDSF 00000096

Symbol: CDSF
   Definitions
      At line 100 in file main.s
   Uses
      At line 108 in file main.s
Comment: CDSF used once
CDSF2 0000011C

Symbol: CDSF2
   Definitions
      At line 172 in file main.s
   Uses
      At line 180 in file main.s
Comment: CDSF2 used once
CE 0000020C

Symbol: CE
   Definitions
      At line 313 in file main.s
   Uses
      At line 323 in file main.s
Comment: CE used once
CFD 00000060

Symbol: CFD
   Definitions
      At line 73 in file main.s
   Uses
      At line 66 in file main.s
      At line 84 in file main.s

CM0 000000D6

Symbol: CM0
   Definitions
      At line 136 in file main.s
   Uses
      At line 131 in file main.s
      At line 140 in file main.s

CMD0 000000E6

Symbol: CMD0
   Definitions
      At line 146 in file main.s
   Uses
      At line 132 in file main.s
Comment: CMD0 used once
CMD02 000000FA




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

Symbol: CMD02
   Definitions
      At line 154 in file main.s
   Uses
      At line 158 in file main.s
Comment: CMD02 used once
CPM 00000164

Symbol: CPM
   Definitions
      At line 205 in file main.s
   Uses
      At line 213 in file main.s
Comment: CPM used once
ER1I 000001E4

Symbol: ER1I
   Definitions
      At line 279 in file main.s
   Uses
      At line 259 in file main.s
Comment: ER1I used once
ER1S 000001F0

Symbol: ER1S
   Definitions
      At line 290 in file main.s
   Uses
      At line 264 in file main.s
Comment: ER1S used once
ES1I 000001EA

Symbol: ES1I
   Definitions
      At line 284 in file main.s
   Uses
      At line 260 in file main.s
Comment: ES1I used once
ES1S 000001F6

Symbol: ES1S
   Definitions
      At line 295 in file main.s
   Uses
      At line 265 in file main.s
Comment: ES1S used once
ESR1 000001B0

Symbol: ESR1
   Definitions
      At line 247 in file main.s
   Uses
      At line 225 in file main.s
Comment: ESR1 used once
ESR2 000001C8

Symbol: ESR2
   Definitions
      At line 256 in file main.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 291 in file main.s
      At line 296 in file main.s

FBBM 00000170

Symbol: FBBM
   Definitions
      At line 209 in file main.s
   Uses
      At line 233 in file main.s
      At line 270 in file main.s
      At line 275 in file main.s

FESR2 000001D2

Symbol: FESR2
   Definitions
      At line 261 in file main.s
   Uses
      At line 280 in file main.s
      At line 285 in file main.s

IE1 00000034

Symbol: IE1
   Definitions
      At line 55 in file main.s
   Uses
      At line 39 in file main.s
Comment: IE1 used once
IE2 00000084

Symbol: IE2
   Definitions
      At line 89 in file main.s
   Uses
      At line 77 in file main.s
Comment: IE2 used once
IE3 000000B0

Symbol: IE3
   Definitions
      At line 113 in file main.s
   Uses
      At line 101 in file main.s
Comment: IE3 used once
IE4 0000010A

Symbol: IE4
   Definitions
      At line 163 in file main.s
   Uses
      At line 137 in file main.s
      At line 155 in file main.s

IE5 0000013A

Symbol: IE5



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 188 in file main.s
   Uses
      At line 173 in file main.s
Comment: IE5 used once
IE6 000001FC

Symbol: IE6
   Definitions
      At line 305 in file main.s
   Uses
      At line 206 in file main.s
Comment: IE6 used once
LEFD 00000052

Symbol: LEFD
   Definitions
      At line 65 in file main.s
   Uses
      At line 69 in file main.s
Comment: LEFD used once
Main 00000000

Symbol: Main
   Definitions
      At line 18 in file main.s
   Uses
      None
Comment: Main unused
RRP 0000002E

Symbol: RRP
   Definitions
      At line 47 in file main.s
   Uses
      At line 41 in file main.s
Comment: RRP used once
STOP 00000230

Symbol: STOP
   Definitions
      At line 325 in file main.s
   Uses
      At line 317 in file main.s
      At line 325 in file main.s

__main 00000000

Symbol: __main
   Definitions
      At line 22 in file main.s
   Uses
      At line 20 in file main.s
Comment: __main used once
35 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

EBBM 20026224

Symbol: EBBM
   Definitions
      At line 8 in file main.s
   Uses
      None
Comment: EBBM unused
EDUF 20025A24

Symbol: EDUF
   Definitions
      At line 6 in file main.s
   Uses
      At line 113 in file main.s
Comment: EDUF used once
EFA 20025624

Symbol: EFA
   Definitions
      At line 5 in file main.s
   Uses
      At line 89 in file main.s
      At line 188 in file main.s

EFA2 20025E24

Symbol: EFA2
   Definitions
      At line 7 in file main.s
   Uses
      At line 163 in file main.s
      At line 189 in file main.s

EFD 20025224

Symbol: EFD
   Definitions
      At line 4 in file main.s
   Uses
      At line 56 in file main.s
Comment: EFD used once
EIF 20026A24

Symbol: EIF
   Definitions
      At line 10 in file main.s
   Uses
      At line 306 in file main.s
Comment: EIF used once
EII 20000000

Symbol: EII
   Definitions
      At line 3 in file main.s
   Uses
      At line 29 in file main.s
      At line 55 in file main.s
      At line 305 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


ERM 20026624

Symbol: ERM
   Definitions
      At line 9 in file main.s
   Uses
      At line 190 in file main.s
      At line 307 in file main.s

8 symbols
380 symbols in table
