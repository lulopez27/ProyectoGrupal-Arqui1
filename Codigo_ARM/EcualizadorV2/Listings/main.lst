


ARM Macro Assembler    Page 1 


    1 00000000         ; Etiquetas de memoria, donde se inician los arrays del 
                       algoritmo
    2 00000000         
    3 00000000 20000000 
                       EII     EQU              0x20000000  ;Etiqueta de inicio
                                                             de la imagen
    4 00000000 20025224 
                       EFD     EQU              0x20025224  ;Etiqueta de inicio
                                                             de la frecuencia d
                                                            e distribución
    5 00000000 20025624 
                       EFA     EQU              0x20025624  ;Etiqueta de inicio
                                                             de la frecuencia a
                                                            cumulada 
    6 00000000 20025A24 
                       EDUF    EQU              0x20025A24  ;Etiqueta de inicio
                                                             de la distribución
                                                             uniforme de la fre
                                                            cuencia acumulada
    7 00000000 20025E24 
                       EFA2    EQU              0x20025E24  ;Etiqueta de la fre
                                                            cuencia acumulada p
                                                            arte 2 (acumulada d
                                                            e la frecuencia dis
                                                            tribuida)
    8 00000000 20026224 
                       EBBM    EQU              0x20026224  ;Etiqueta de inicio
                                                             del bloque borrado
                                                            r del mapeo
    9 00000000 20026624 
                       ERM     EQU              0x20026624  ;Etiqueta de inicio
                                                             del resultado del 
                                                            mapeo
   10 00000000 20026A24 
                       EIF     EQU              0x20026A24  ;Etiqueta de inicio
                                                             de la imagen final
                                                             ecualizada
   11 00000000         
   12 00000000         
   13 00000000         
   14 00000000         ; Código del programa principal
   15 00000000         ; Ecualizador V2, se trabaja con imágenes de 390x390 (15
                       2100 pixeles), donde cada pixel es de 1 byte(rango de 0-
                       255)
   16 00000000         
   17 00000000         
   18 00000000                 AREA             Main, CODE, READONLY
   19 00000000                 ENTRY
   20 00000000                 EXPORT           __main
   21 00000000         
   22 00000000         __main
   23 00000000         
   24 00000000         
   25 00000000         ; Etapa 0: Se carga la imagen en memoria
   26 00000000         ; En este caso se rellenan los 152100 pixeles con valore
                       s random. Se van llenando los campos de manera secuencia
                       l con valores de 0-255
   27 00000000         ; Cuando se alcanzan los 256 valores, se vuelve a comenz
                       ar desde cero, y así sucesivamente hasta llenar la image



ARM Macro Assembler    Page 2 


                       n completa
   28 00000000         
   29 00000000 F04F 5100       LDR              R1,=EII
   30 00000004 F04F 0200       MOV              R2,#0       ;Contador de los va
                                                            lores de 0-255, con
                                                              los que se llenar
                                                            á la memoria
   31 00000008 F04F 0300       MOV              R3,#0       ;Contador de los pi
                                                            xeles de la imagen
   32 0000000C F44F 7461       MOV              R4,#900
   33 00000010 F04F 05A9       MOV              R5,#169
   34 00000014 FB04 F605       MUL              R6,R4,R5    ; R6 almacena el re
                                                            sultado de 900x169=
                                                            152100. Se hizo de 
                                                            esta manera debido 
                                                            a las limitaciones 
                                                            de ARM para generar
                                                             los inmediatos
   35 00000018         
   36 00000018         ;CAI: Ciclo de almacenamiento de la imagen
   37 00000018         
   38 00000018 42B3    CAI     CMP              R3,R6       ; El ciclo se termi
                                                            na cuando se llenan
                                                             los 152100 pixeles
                                                             de la imagen
   39 0000001A D00B            BEQ              IE1
   40 0000001C F5B2 7F80       CMP              R2,#256     ; Cuando se alcanza
                                                            n los 256 valores, 
                                                            se resetea el conta
                                                            dor a cero de nuevo
                                                            
   41 00000020 D005            BEQ              RRP         ; RRP: Reset de los
                                                             valores del Rango 
                                                            de Pixeles
   42 00000022 50CA    CCAI    STR              R2,[R1,R3]
   43 00000024 F102 0201       ADD              R2,R2,#1    ; Se incrementa en 
                                                            1, el valor del con
                                                            tador de los valore
                                                            s random con que se
                                                             llenará la imagen
   44 00000028 F103 0301       ADD              R3,R3,#1    ; El contador de la
                                                             imagen es de 1 en 
                                                            1, ya que se almace
                                                            na byte por byte
   45 0000002C E7F4            B                CAI
   46 0000002E         
   47 0000002E F04F 0200 
                       RRP     MOV              R2,#0
   48 00000032 E7F6            B                CCAI        ;CCAI: Continuación
                                                             del CAI 
   49 00000034         
   50 00000034         
   51 00000034         
   52 00000034         
   53 00000034         ; Etapa 1: Se obtiene la frecuencia de distribución de l
                       a imagen
   54 00000034         
   55 00000034 F04F 5100 
                       IE1     LDR              R1,=EII



ARM Macro Assembler    Page 3 


   56 00000038 4A7A            LDR              R2,=EFD
   57 0000003A F04F 0300       MOV              R3,#0       ;Contador de la ima
                                                            gen
   58 0000003E F04F 0400       MOV              R4,#0       ;Contador donde se 
                                                            guarda el array de 
                                                            la frecuencia
   59 00000042 F04F 0500       MOV              R5,#0       ;Contador de los va
                                                            lores del rango 0-2
                                                            55
   60 00000046 F04F 0700       MOV              R7,#0       ;Contador de la fre
                                                            cuencia
   61 0000004A         
   62 0000004A         ;CFD: Ciclo de Frecuencia de Distribución
   63 0000004A         ;Básicamente para cada valor del rango 0-255, se comprue
                       ba cuantas veces se repite en toda la imagen
   64 0000004A         
   65 0000004A F5B5 7F80 
                       CFD     CMP              R5,#256     ;El ciclo se termin
                                                            a cuando se verific
                                                            aron los 256 valore
                                                            s del rango
   66 0000004E D01B            BEQ              IE2         ;IE2: Inicio de la 
                                                            etapa 2
   67 00000050 E009            B                CVPR
   68 00000052 F04F 0300 
                       FVP     MOV              R3,#0       ;Se resetea el cont
                                                            ador de la imagen, 
                                                            cuando ya se recorr
                                                            ió completa para ve
                                                            rificar el valor ac
                                                            tual del rango
   69 00000056 5117            STR              R7,[R2,R4]  ;Para el valor actu
                                                            al del rango, se al
                                                            macena la cantidad 
                                                            de veces que se rep
                                                            ite en la imagen
   70 00000058 F04F 0700       MOV              R7,#0       ;Se resetea R7, que
                                                             es el resultado de
                                                             cada conteo
   71 0000005C F104 0404       ADD              R4,R4,#4    ;El contador del ar
                                                            ray es de 4 en 4
   72 00000060 F105 0501       ADD              R5,R5,#1    ;Se incrementa el c
                                                            ontador del rango
   73 00000064 E7F1            B                CFD
   74 00000066         
   75 00000066         ;CVPR: Ciclo de Verificar el pixel actual con el valor d
                       el rango actual
   76 00000066         
   77 00000066 F44F 7A61 
                       CVPR    MOV              R10,#900
   78 0000006A F04F 0BA9       MOV              R11,#169
   79 0000006E FB0A FC0B       MUL              R12,R10,R11 ;R12 almacena el va
                                                            lor de 900x169=1521
                                                            00
   80 00000072 4563            CMP              R3,R12
   81 00000074 D0ED            BEQ              FVP         ;FVP: Fin de verifi
                                                            car pixeles
   82 00000076 5CCE            LDRB             R6,[R1,R3]  ;Se usa LDRB debido
                                                             a que la imagen se



ARM Macro Assembler    Page 4 


                                                             almacena byte por 
                                                            byte, para STR no h
                                                            ay bronca
   83 00000078 42AE            CMP              R6,R5       ;Se compara el valo
                                                            r actual del rango 
                                                            con el valor de la 
                                                            imagen
   84 0000007A D002            BEQ              SUM1        ;Si son iguales se 
                                                            incrementa en 1 el 
                                                            resultado de la fre
                                                            cuencia de distribu
                                                            ción
   85 0000007C F103 0301 
                       FS1     ADD              R3,R3,#1    ;Se incrementa en 1
                                                             el contador de la 
                                                            imagen
   86 00000080 E7F1            B                CVPR
   87 00000082         
   88 00000082         
   89 00000082 F107 0701 
                       SUM1    ADD              R7,R7,#1
   90 00000086 E7F9            B                FS1         ;FS1: Fin de sumar 
                                                            1
   91 00000088         
   92 00000088         ; Etapa 2: Se obtiene la frecuencia acumulada
   93 00000088         
   94 00000088 4967    IE2     LDR              R1,=EFA
   95 0000008A F04F 0300       MOV              R3,#0       ;Contador del bloqu
                                                            e de frecuencia de 
                                                            distribución
   96 0000008E F04F 0400       MOV              R4,#0       ;Contador del bloqu
                                                            e de frecuencia acu
                                                            mulada
   97 00000092 58D5            LDR              R5,[R2,R3]  ;Se obtiene el prim
                                                            er valor de la frec
                                                            uencia de distribuc
                                                            ión
   98 00000094 510D            STR              R5,[R1,R4]  ;Se hace copia dire
                                                            cta del primer valo
                                                            r del f(I) en el ar
                                                            ray del CuF
   99 00000096 F103 0304       ADD              R3,R3,#4    ;Se incrementa el c
                                                            ontador del f(I), y
                                                            a que se va sumando
                                                             el valor actual de
                                                             f(I) con el valor 
                                                            anterior del CuF
  100 0000009A         
  101 0000009A         ; CDSF: Ciclo de sumar frecuencias
  102 0000009A         ;Básicamente para obtener el nuevo valor del CuF, se sum
                       a el valor actual del f(I) con el valor anterior del CuF
                       
  103 0000009A         ;Es por esto que el contador del f(I) va adelantado en 1
                        al del CuF. Como se  mencionó previamente, el primer va
                       lor se hace copia directa
  104 0000009A         
  105 0000009A F5B3 6F80 
                       CDSF    CMP              R3,#1024    ;El límite son 256x
                                                            4=1024. Cantidad to



ARM Macro Assembler    Page 5 


                                                            tales de bloques de
                                                             los arrays
  106 0000009E D009            BEQ              IE3
  107 000000A0 58D5            LDR              R5,[R2,R3]
  108 000000A2 590E            LDR              R6,[R1,R4]
  109 000000A4 EB05 0706       ADD              R7,R5,R6
  110 000000A8 F104 0404       ADD              R4,R4,#4
  111 000000AC 510F            STR              R7,[R1,R4]
  112 000000AE F103 0304       ADD              R3,R3,#4
  113 000000B2 E7F2            B                CDSF
  114 000000B4         
  115 000000B4         
  116 000000B4         ; Etapa 3: Se distribuye uniformemente la frecuencia acu
                       mulada
  117 000000B4         
  118 000000B4 4B5D    IE3     LDR              R3,=EDUF
  119 000000B6 F8D1 43FC       LDR              R4,[R1,#1020] ;El valor de 1020
                                                             se obtiene de 255x
                                                            4. Me permite obten
                                                            er la última posici
                                                            ón del array del Cu
                                                            F
  120 000000BA F44F 7580       MOV              R5,#256     ;El módulo se calcu
                                                            la con 256, que es 
                                                            la cantidad máxima 
                                                            de posibilidades pa
                                                            ra 1 byte
  121 000000BE         
  122 000000BE         ;Se calcula el módulo del valor máximo de CuF entre el v
                       alor máximo del rango
  123 000000BE FBB4 F6F5       UDIV             R6,R4,R5
  124 000000C2 FB06 F705       MUL              R7,R6,R5
  125 000000C6 EBA4 0807       SUB              R8,R4,R7
  126 000000CA         
  127 000000CA         ;Se calcula la parte entera de el valor máximo de CuF en
                       tre el valor máximo del rango(N = 256 = 2**8)
  128 000000CA         ;Para hacer esta división se utiliza el corrimiento arit
                       mético a la derecha con 8 bits
  129 000000CA EA4F 2924       ASR              R9,R4,#8
  130 000000CE         
  131 000000CE         ;Se utiliza el R6 como contador del bloque Feq
  132 000000CE F04F 0600       MOV              R6,#0
  133 000000D2         
  134 000000D2         ;Se toman dos caminos dependiendo del módulo
  135 000000D2 F1B8 0F00       CMP              R8,#0
  136 000000D6 D000            BEQ              CM0         ;CM0:  Ciclo cuando
                                                             el módulo es cero
  137 000000D8 E007            B                CMD0        ;CMDO: Ciclo cuando
                                                             el módulo es difer
                                                            ente de cero
  138 000000DA         
  139 000000DA         ;Cuando el módulo es cero, se distribuye uniformemente e
                       l valor obtenido al dividir el máximo de CuF entre 256
  140 000000DA         
  141 000000DA F5B6 6F80 
                       CM0     CMP              R6,#1024
  142 000000DE D016            BEQ              IE4
  143 000000E0 F843 9006       STR              R9,[R3,R6]
  144 000000E4 F106 0604       ADD              R6,R6,#4



ARM Macro Assembler    Page 6 


  145 000000E8 E7F7            B                CM0
  146 000000EA         
  147 000000EA         ;Cuando el módulo es diferente de cero, se debe obtener 
                       el valor faltante para completar el máximo del CuF a la 
                       hora de hacer la distribución
  148 000000EA         ;La ecuación es: X = MaxCuF - (cocienteEntero x 255 )
  149 000000EA         ;Este valor se puede almacenar en cualquier lugar, por s
                       implicidad se almacena de primero
  150 000000EA         
  151 000000EA F04F 07FF 
                       CMD0    MOV              R7,#255
  152 000000EE FB09 FA07       MUL              R10,R9,R7
  153 000000F2 EBA4 0B0A       SUB              R11,R4,R10
  154 000000F6 F843 B006       STR              R11,[R3,R6]
  155 000000FA F106 0604       ADD              R6,R6,#4
  156 000000FE         
  157 000000FE         ;Ciclo para almacenar el cocienteEntero de MaxCuF/256, e
                       n el resto de campos del array del Feq
  158 000000FE         
  159 000000FE F5B6 6F80 
                       CMD02   CMP              R6,#1024
  160 00000102 D004            BEQ              IE4
  161 00000104 F843 9006       STR              R9,[R3,R6]
  162 00000108 F106 0604       ADD              R6,R6,#4
  163 0000010C E7F7            B                CMD02
  164 0000010E         
  165 0000010E         ; Etapa 4: Se obtiene la frecuencia acumulada de la frec
                       uencia distribuida
  166 0000010E         ; Mismo algoritmo de la etapa 2, solo que en este caso s
                       e obtiene la frecuencia acumulada del Feq
  167 0000010E         
  168 0000010E 4C48    IE4     LDR              R4,=EFA2
  169 00000110 F04F 0500       MOV              R5,#0       ; Contador del bloq
                                                            ue de frecuencia di
                                                            stribuida
  170 00000114 F04F 0600       MOV              R6,#0       ; Contador del bloq
                                                            ue de frecuencia ac
                                                            umulada parte 2
  171 00000118 595F            LDR              R7,[R3,R5]
  172 0000011A 51A7            STR              R7,[R4,R6]
  173 0000011C F105 0504       ADD              R5,R5,#4
  174 00000120         
  175 00000120         ; CDSF2: Ciclo de sumar frecuencias2
  176 00000120         
  177 00000120 F5B5 6F80 
                       CDSF2   CMP              R5,#1024
  178 00000124 D00B            BEQ              IE5
  179 00000126 595F            LDR              R7,[R3,R5]
  180 00000128 F854 8006       LDR              R8,[R4,R6]
  181 0000012C EB07 0908       ADD              R9,R7,R8
  182 00000130 F106 0604       ADD              R6,R6,#4
  183 00000134 F844 9006       STR              R9,[R4,R6]
  184 00000138 F105 0504       ADD              R5,R5,#4
  185 0000013C E7F0            B                CDSF2
  186 0000013E         
  187 0000013E         
  188 0000013E         ; Etapa 5: Se obtiene el array del mapeo
  189 0000013E         ; La esencia del algoritmo, es encontrar el valor más ce
                       rcano del CuFeq a CuF



ARM Macro Assembler    Page 7 


  190 0000013E         ; Para cada valor del CuF, lo comparo con todos los valo
                       res del CuFeq, si son iguales se acabó la búsqueda.
  191 0000013E         ; Si no son iguales, se verifica si el número es mayor o
                        menor al de interés , donde el algoritmo tomará dos cam
                       inos.
  192 0000013E         ; Si el número es mayor que el de interés, se le restará
                        1, si es menor se le sumará 1.
  193 0000013E         ; Lo anterior se repite para todos los valores del CuFeq
                       , hasta que se encuentre el primero que sea igual, ya qu
                       e eso representa el valor más cercano.
  194 0000013E         ; El valor que se lleva como resultado en R7 es de la po
                       sición del array, que es lo que se ocupa al final.
  195 0000013E         ; Hay un bloque donde se hace copia del CuFeq (se conser
                       va el original), para cada valor de CuF, esto se debe a 
                       que el arreglo se está modificando con sumas y restas ha
                       sta encontrar el valor más cercano.
  196 0000013E         
  197 0000013E         
  198 0000013E 493A    IE5     LDR              R1,=EFA
  199 00000140 4A3B            LDR              R2,=EFA2
  200 00000142 4B3C            LDR              R3,=EBBM
  201 00000144 4C3C            LDR              R4,=ERM
  202 00000146 F04F 0500       MOV              R5,#0       ;Contador del CuF y
                                                             del I prima del ma
                                                            peo
  203 0000014A F04F 0600       MOV              R6,#0       ;Contador del CuFeq
                                                            
  204 0000014E F04F 0700       MOV              R7,#0       ;Contador de la pos
                                                            ición final
  205 00000152 F04F 0800       MOV              R8,#0       ;Contador del bloqu
                                                            e borrador del mape
                                                            o
  206 00000156         
  207 00000156         
  208 00000156         
  209 00000156         ;CPM: Ciclo principal del mapeo
  210 00000156         
  211 00000156 F5B5 6F80 
                       CPM     CMP              R5,#1024
  212 0000015A D047            BEQ              IE6
  213 0000015C F851 9005       LDR              R9,[R1,R5]
  214 00000160 E009            B                CCC
  215 00000162 5167    FCPM    STR              R7,[R4,R5]
  216 00000164 F105 0504       ADD              R5,R5,#4
  217 00000168 F04F 0600       MOV              R6,#0
  218 0000016C F04F 0700       MOV              R7,#0
  219 00000170 F04F 0800       MOV              R8,#0
  220 00000174 E7EF            B                CPM
  221 00000176         
  222 00000176         ;CCC: Ciclo que hace la copia del CuFeq en el borrador
  223 00000176         
  224 00000176 F5B6 6F80 
                       CCC     CMP              R6,#1024
  225 0000017A D008            BEQ              RESET1
  226 0000017C F852 A006       LDR              R10,[R2,R6]
  227 00000180 F843 A008       STR              R10,[R3,R8]
  228 00000184 F106 0604       ADD              R6,R6,#4
  229 00000188 F108 0804       ADD              R8,R8,#4
  230 0000018C E7F3            B                CCC



ARM Macro Assembler    Page 8 


  231 0000018E         
  232 0000018E F04F 0800 
                       RESET1  MOV              R8,#0
  233 00000192 F853 A008       LDR              R10,[R3,R8]
  234 00000196         
  235 00000196         ;CSM: Ciclo secundario del mapeo
  236 00000196         
  237 00000196 45D1    CSM     CMP              R9,R10
  238 00000198 D0E3            BEQ              FCPM
  239 0000019A 45D1            CMP              R9,R10
  240 0000019C DC00            BGT              MS
  241 0000019E E00D            B                MR
  242 000001A0         
  243 000001A0         ; MS: Mapeo de sumas         
  244 000001A0         
  245 000001A0 F10A 0A01 
                       MS      ADD              R10,R10,#1
  246 000001A4 F843 A008       STR              R10,[R3,R8]
  247 000001A8 F108 0804       ADD              R8,R8,#4
  248 000001AC F107 0701       ADD              R7,R7,#1
  249 000001B0 F5B8 6F80       CMP              R8,#1024
  250 000001B4 D010            BEQ              RS
  251 000001B6 F853 A008 
                       RSF     LDR              R10,[R3,R8]
  252 000001BA E7EC            B                CSM
  253 000001BC         
  254 000001BC         ; MR: Mapeo de restas 
  255 000001BC         
  256 000001BC F1AA 0A01 
                       MR      SUB              R10,R10,#1
  257 000001C0 F843 A008       STR              R10,[R3,R8]
  258 000001C4 F108 0804       ADD              R8,R8,#4
  259 000001C8 F107 0701       ADD              R7,R7,#1
  260 000001CC F5B8 6F80       CMP              R8,#1024
  261 000001D0 D007            BEQ              RR
  262 000001D2 F853 A008 
                       RRF     LDR              R10,[R3,R8]
  263 000001D6 E7DE            B                CSM
  264 000001D8         
  265 000001D8         ; RS: Reset de las sumas
  266 000001D8         
  267 000001D8 F04F 0700 
                       RS      MOV              R7,#0
  268 000001DC F04F 0800       MOV              R8,#0
  269 000001E0 E7E9            B                RSF
  270 000001E2         
  271 000001E2         ; RR: Reset de las restas
  272 000001E2         
  273 000001E2 F04F 0700 
                       RR      MOV              R7,#0
  274 000001E6 F04F 0800       MOV              R8,#0
  275 000001EA E7F2            B                RRF
  276 000001EC         
  277 000001EC         ; Etapa 6: Se mapea la imagen original en su forma ecual
                       izada
  278 000001EC         ; Básicamente para cada valor de la imagen original, se 
                       multiplica por 4, para obtener la posición del array del
                        mapeo
  279 000001EC         ; El valor obtenido del array del mapeo, será el nuevo p



ARM Macro Assembler    Page 9 


                       ixel
  280 000001EC         
  281 000001EC F04F 5100 
                       IE6     LDR              R1,=EII
  282 000001F0 4A12            LDR              R2,=EIF
  283 000001F2 4B11            LDR              R3,=ERM
  284 000001F4 F04F 0400       MOV              R4,#0       ;Contador de la ima
                                                            gen
  285 000001F8 F04F 0504       MOV              R5,#4
  286 000001FC         
  287 000001FC         ; CE: Ciclo de la ecualización
  288 000001FC         
  289 000001FC F44F 7A61 
                       CE      MOV              R10,#900
  290 00000200 F04F 0BA9       MOV              R11,#169
  291 00000204 FB0A FC0B       MUL              R12,R10,R11
  292 00000208 4564            CMP              R4,R12
  293 0000020A D009            BEQ              STOP
  294 0000020C 5D0E            LDRB             R6,[R1,R4]
  295 0000020E FB06 F705       MUL              R7,R6,R5
  296 00000212 F853 8007       LDR              R8,[R3,R7]
  297 00000216 F842 8004       STR              R8,[R2,R4]
  298 0000021A F104 0401       ADD              R4,R4,#1
  299 0000021E E7ED            B                CE
  300 00000220         
  301 00000220 E7FE    STOP    B                STOP
  302 00000222         
  303 00000222                 END
              00 00 20025224 
              20025624 
              20025A24 
              20025E24 
              20026224 
              20026624 
              20026A24 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\main.d -o.\objects\main.o -I.\RTE\_Cortex_M3 -IC:\Users\
User\AppData\Local\Arm\Packs\ARM\CMSIS\5.7.0\CMSIS\Core\Include -IC:\Users\User
\AppData\Local\Arm\Packs\ARM\CMSIS\5.7.0\Device\ARM\ARMCM3\Include --predefine=
"__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="__UVISION_VERSION 
SETA 529" --predefine="_RTE_ SETA 1" --predefine="ARMCM3 SETA 1" --list=.\listi
ngs\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

CAI 00000018

Symbol: CAI
   Definitions
      At line 38 in file main.s
   Uses
      At line 45 in file main.s
Comment: CAI used once
CCAI 00000022

Symbol: CCAI
   Definitions
      At line 42 in file main.s
   Uses
      At line 48 in file main.s
Comment: CCAI used once
CCC 00000176

Symbol: CCC
   Definitions
      At line 224 in file main.s
   Uses
      At line 214 in file main.s
      At line 230 in file main.s

CDSF 0000009A

Symbol: CDSF
   Definitions
      At line 105 in file main.s
   Uses
      At line 113 in file main.s
Comment: CDSF used once
CDSF2 00000120

Symbol: CDSF2
   Definitions
      At line 177 in file main.s
   Uses
      At line 185 in file main.s
Comment: CDSF2 used once
CE 000001FC

Symbol: CE
   Definitions
      At line 289 in file main.s
   Uses
      At line 299 in file main.s
Comment: CE used once
CFD 0000004A

Symbol: CFD
   Definitions
      At line 65 in file main.s
   Uses
      At line 73 in file main.s
Comment: CFD used once
CM0 000000DA




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: CM0
   Definitions
      At line 141 in file main.s
   Uses
      At line 136 in file main.s
      At line 145 in file main.s

CMD0 000000EA

Symbol: CMD0
   Definitions
      At line 151 in file main.s
   Uses
      At line 137 in file main.s
Comment: CMD0 used once
CMD02 000000FE

Symbol: CMD02
   Definitions
      At line 159 in file main.s
   Uses
      At line 163 in file main.s
Comment: CMD02 used once
CPM 00000156

Symbol: CPM
   Definitions
      At line 211 in file main.s
   Uses
      At line 220 in file main.s
Comment: CPM used once
CSM 00000196

Symbol: CSM
   Definitions
      At line 237 in file main.s
   Uses
      At line 252 in file main.s
      At line 263 in file main.s

CVPR 00000066

Symbol: CVPR
   Definitions
      At line 77 in file main.s
   Uses
      At line 67 in file main.s
      At line 86 in file main.s

FCPM 00000162

Symbol: FCPM
   Definitions
      At line 215 in file main.s
   Uses
      At line 238 in file main.s
Comment: FCPM used once
FS1 0000007C




ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

Symbol: FS1
   Definitions
      At line 85 in file main.s
   Uses
      At line 90 in file main.s
Comment: FS1 used once
FVP 00000052

Symbol: FVP
   Definitions
      At line 68 in file main.s
   Uses
      At line 81 in file main.s
Comment: FVP used once
IE1 00000034

Symbol: IE1
   Definitions
      At line 55 in file main.s
   Uses
      At line 39 in file main.s
Comment: IE1 used once
IE2 00000088

Symbol: IE2
   Definitions
      At line 94 in file main.s
   Uses
      At line 66 in file main.s
Comment: IE2 used once
IE3 000000B4

Symbol: IE3
   Definitions
      At line 118 in file main.s
   Uses
      At line 106 in file main.s
Comment: IE3 used once
IE4 0000010E

Symbol: IE4
   Definitions
      At line 168 in file main.s
   Uses
      At line 142 in file main.s
      At line 160 in file main.s

IE5 0000013E

Symbol: IE5
   Definitions
      At line 198 in file main.s
   Uses
      At line 178 in file main.s
Comment: IE5 used once
IE6 000001EC

Symbol: IE6
   Definitions



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

      At line 281 in file main.s
   Uses
      At line 212 in file main.s
Comment: IE6 used once
MR 000001BC

Symbol: MR
   Definitions
      At line 256 in file main.s
   Uses
      At line 241 in file main.s
Comment: MR used once
MS 000001A0

Symbol: MS
   Definitions
      At line 245 in file main.s
   Uses
      At line 240 in file main.s
Comment: MS used once
Main 00000000

Symbol: Main
   Definitions
      At line 18 in file main.s
   Uses
      None
Comment: Main unused
RESET1 0000018E

Symbol: RESET1
   Definitions
      At line 232 in file main.s
   Uses
      At line 225 in file main.s
Comment: RESET1 used once
RR 000001E2

Symbol: RR
   Definitions
      At line 273 in file main.s
   Uses
      At line 261 in file main.s
Comment: RR used once
RRF 000001D2

Symbol: RRF
   Definitions
      At line 262 in file main.s
   Uses
      At line 275 in file main.s
Comment: RRF used once
RRP 0000002E

Symbol: RRP
   Definitions
      At line 47 in file main.s
   Uses
      At line 41 in file main.s



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

Comment: RRP used once
RS 000001D8

Symbol: RS
   Definitions
      At line 267 in file main.s
   Uses
      At line 250 in file main.s
Comment: RS used once
RSF 000001B6

Symbol: RSF
   Definitions
      At line 251 in file main.s
   Uses
      At line 269 in file main.s
Comment: RSF used once
STOP 00000220

Symbol: STOP
   Definitions
      At line 301 in file main.s
   Uses
      At line 293 in file main.s
      At line 301 in file main.s

SUM1 00000082

Symbol: SUM1
   Definitions
      At line 89 in file main.s
   Uses
      At line 84 in file main.s
Comment: SUM1 used once
__main 00000000

Symbol: __main
   Definitions
      At line 22 in file main.s
   Uses
      At line 20 in file main.s
Comment: __main used once
34 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

EBBM 20026224

Symbol: EBBM
   Definitions
      At line 8 in file main.s
   Uses
      At line 200 in file main.s
Comment: EBBM used once
EDUF 20025A24

Symbol: EDUF
   Definitions
      At line 6 in file main.s
   Uses
      At line 118 in file main.s
Comment: EDUF used once
EFA 20025624

Symbol: EFA
   Definitions
      At line 5 in file main.s
   Uses
      At line 94 in file main.s
      At line 198 in file main.s

EFA2 20025E24

Symbol: EFA2
   Definitions
      At line 7 in file main.s
   Uses
      At line 168 in file main.s
      At line 199 in file main.s

EFD 20025224

Symbol: EFD
   Definitions
      At line 4 in file main.s
   Uses
      At line 56 in file main.s
Comment: EFD used once
EIF 20026A24

Symbol: EIF
   Definitions
      At line 10 in file main.s
   Uses
      At line 282 in file main.s
Comment: EIF used once
EII 20000000

Symbol: EII
   Definitions
      At line 3 in file main.s
   Uses
      At line 29 in file main.s
      At line 55 in file main.s
      At line 281 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


ERM 20026624

Symbol: ERM
   Definitions
      At line 9 in file main.s
   Uses
      At line 201 in file main.s
      At line 283 in file main.s

8 symbols
379 symbols in table
