--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=19 LPM_WIDTH=5 data eq
--VERSION_BEGIN 19.1 cbx_cycloneii 2019:09:22:11:00:28:SJ cbx_lpm_add_sub 2019:09:22:11:00:28:SJ cbx_lpm_compare 2019:09:22:11:00:28:SJ cbx_lpm_decode 2019:09:22:11:00:28:SJ cbx_mgl 2019:09:22:11:02:15:SJ cbx_nadder 2019:09:22:11:00:28:SJ cbx_stratix 2019:09:22:11:00:28:SJ cbx_stratixii 2019:09:22:11:00:28:SJ  VERSION_END


-- Copyright (C) 2019  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.



--synthesis_resources = lut 36 
SUBDESIGN decode_q2a
( 
	data[4..0]	:	input;
	eq[18..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	eq_node[18..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode1002w[3..0]	: WIRE;
	w_anode1012w[3..0]	: WIRE;
	w_anode1022w[3..0]	: WIRE;
	w_anode654w[2..0]	: WIRE;
	w_anode668w[3..0]	: WIRE;
	w_anode685w[3..0]	: WIRE;
	w_anode695w[3..0]	: WIRE;
	w_anode705w[3..0]	: WIRE;
	w_anode715w[3..0]	: WIRE;
	w_anode725w[3..0]	: WIRE;
	w_anode735w[3..0]	: WIRE;
	w_anode745w[3..0]	: WIRE;
	w_anode757w[2..0]	: WIRE;
	w_anode767w[3..0]	: WIRE;
	w_anode778w[3..0]	: WIRE;
	w_anode788w[3..0]	: WIRE;
	w_anode798w[3..0]	: WIRE;
	w_anode808w[3..0]	: WIRE;
	w_anode818w[3..0]	: WIRE;
	w_anode828w[3..0]	: WIRE;
	w_anode838w[3..0]	: WIRE;
	w_anode849w[2..0]	: WIRE;
	w_anode859w[3..0]	: WIRE;
	w_anode870w[3..0]	: WIRE;
	w_anode880w[3..0]	: WIRE;
	w_anode890w[3..0]	: WIRE;
	w_anode900w[3..0]	: WIRE;
	w_anode910w[3..0]	: WIRE;
	w_anode920w[3..0]	: WIRE;
	w_anode930w[3..0]	: WIRE;
	w_anode941w[2..0]	: WIRE;
	w_anode951w[3..0]	: WIRE;
	w_anode962w[3..0]	: WIRE;
	w_anode972w[3..0]	: WIRE;
	w_anode982w[3..0]	: WIRE;
	w_anode992w[3..0]	: WIRE;
	w_data652w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	eq[] = eq_node[];
	eq_node[18..0] = eq_wire[18..0];
	eq_wire[] = ( ( w_anode1022w[3..3], w_anode1012w[3..3], w_anode1002w[3..3], w_anode992w[3..3], w_anode982w[3..3], w_anode972w[3..3], w_anode962w[3..3], w_anode951w[3..3]), ( w_anode930w[3..3], w_anode920w[3..3], w_anode910w[3..3], w_anode900w[3..3], w_anode890w[3..3], w_anode880w[3..3], w_anode870w[3..3], w_anode859w[3..3]), ( w_anode838w[3..3], w_anode828w[3..3], w_anode818w[3..3], w_anode808w[3..3], w_anode798w[3..3], w_anode788w[3..3], w_anode778w[3..3], w_anode767w[3..3]), ( w_anode745w[3..3], w_anode735w[3..3], w_anode725w[3..3], w_anode715w[3..3], w_anode705w[3..3], w_anode695w[3..3], w_anode685w[3..3], w_anode668w[3..3]));
	w_anode1002w[] = ( (w_anode1002w[2..2] & w_data652w[2..2]), (w_anode1002w[1..1] & (! w_data652w[1..1])), (w_anode1002w[0..0] & w_data652w[0..0]), w_anode941w[2..2]);
	w_anode1012w[] = ( (w_anode1012w[2..2] & w_data652w[2..2]), (w_anode1012w[1..1] & w_data652w[1..1]), (w_anode1012w[0..0] & (! w_data652w[0..0])), w_anode941w[2..2]);
	w_anode1022w[] = ( (w_anode1022w[2..2] & w_data652w[2..2]), (w_anode1022w[1..1] & w_data652w[1..1]), (w_anode1022w[0..0] & w_data652w[0..0]), w_anode941w[2..2]);
	w_anode654w[] = ( (w_anode654w[1..1] & (! data_wire[4..4])), (w_anode654w[0..0] & (! data_wire[3..3])), B"1");
	w_anode668w[] = ( (w_anode668w[2..2] & (! w_data652w[2..2])), (w_anode668w[1..1] & (! w_data652w[1..1])), (w_anode668w[0..0] & (! w_data652w[0..0])), w_anode654w[2..2]);
	w_anode685w[] = ( (w_anode685w[2..2] & (! w_data652w[2..2])), (w_anode685w[1..1] & (! w_data652w[1..1])), (w_anode685w[0..0] & w_data652w[0..0]), w_anode654w[2..2]);
	w_anode695w[] = ( (w_anode695w[2..2] & (! w_data652w[2..2])), (w_anode695w[1..1] & w_data652w[1..1]), (w_anode695w[0..0] & (! w_data652w[0..0])), w_anode654w[2..2]);
	w_anode705w[] = ( (w_anode705w[2..2] & (! w_data652w[2..2])), (w_anode705w[1..1] & w_data652w[1..1]), (w_anode705w[0..0] & w_data652w[0..0]), w_anode654w[2..2]);
	w_anode715w[] = ( (w_anode715w[2..2] & w_data652w[2..2]), (w_anode715w[1..1] & (! w_data652w[1..1])), (w_anode715w[0..0] & (! w_data652w[0..0])), w_anode654w[2..2]);
	w_anode725w[] = ( (w_anode725w[2..2] & w_data652w[2..2]), (w_anode725w[1..1] & (! w_data652w[1..1])), (w_anode725w[0..0] & w_data652w[0..0]), w_anode654w[2..2]);
	w_anode735w[] = ( (w_anode735w[2..2] & w_data652w[2..2]), (w_anode735w[1..1] & w_data652w[1..1]), (w_anode735w[0..0] & (! w_data652w[0..0])), w_anode654w[2..2]);
	w_anode745w[] = ( (w_anode745w[2..2] & w_data652w[2..2]), (w_anode745w[1..1] & w_data652w[1..1]), (w_anode745w[0..0] & w_data652w[0..0]), w_anode654w[2..2]);
	w_anode757w[] = ( (w_anode757w[1..1] & (! data_wire[4..4])), (w_anode757w[0..0] & data_wire[3..3]), B"1");
	w_anode767w[] = ( (w_anode767w[2..2] & (! w_data652w[2..2])), (w_anode767w[1..1] & (! w_data652w[1..1])), (w_anode767w[0..0] & (! w_data652w[0..0])), w_anode757w[2..2]);
	w_anode778w[] = ( (w_anode778w[2..2] & (! w_data652w[2..2])), (w_anode778w[1..1] & (! w_data652w[1..1])), (w_anode778w[0..0] & w_data652w[0..0]), w_anode757w[2..2]);
	w_anode788w[] = ( (w_anode788w[2..2] & (! w_data652w[2..2])), (w_anode788w[1..1] & w_data652w[1..1]), (w_anode788w[0..0] & (! w_data652w[0..0])), w_anode757w[2..2]);
	w_anode798w[] = ( (w_anode798w[2..2] & (! w_data652w[2..2])), (w_anode798w[1..1] & w_data652w[1..1]), (w_anode798w[0..0] & w_data652w[0..0]), w_anode757w[2..2]);
	w_anode808w[] = ( (w_anode808w[2..2] & w_data652w[2..2]), (w_anode808w[1..1] & (! w_data652w[1..1])), (w_anode808w[0..0] & (! w_data652w[0..0])), w_anode757w[2..2]);
	w_anode818w[] = ( (w_anode818w[2..2] & w_data652w[2..2]), (w_anode818w[1..1] & (! w_data652w[1..1])), (w_anode818w[0..0] & w_data652w[0..0]), w_anode757w[2..2]);
	w_anode828w[] = ( (w_anode828w[2..2] & w_data652w[2..2]), (w_anode828w[1..1] & w_data652w[1..1]), (w_anode828w[0..0] & (! w_data652w[0..0])), w_anode757w[2..2]);
	w_anode838w[] = ( (w_anode838w[2..2] & w_data652w[2..2]), (w_anode838w[1..1] & w_data652w[1..1]), (w_anode838w[0..0] & w_data652w[0..0]), w_anode757w[2..2]);
	w_anode849w[] = ( (w_anode849w[1..1] & data_wire[4..4]), (w_anode849w[0..0] & (! data_wire[3..3])), B"1");
	w_anode859w[] = ( (w_anode859w[2..2] & (! w_data652w[2..2])), (w_anode859w[1..1] & (! w_data652w[1..1])), (w_anode859w[0..0] & (! w_data652w[0..0])), w_anode849w[2..2]);
	w_anode870w[] = ( (w_anode870w[2..2] & (! w_data652w[2..2])), (w_anode870w[1..1] & (! w_data652w[1..1])), (w_anode870w[0..0] & w_data652w[0..0]), w_anode849w[2..2]);
	w_anode880w[] = ( (w_anode880w[2..2] & (! w_data652w[2..2])), (w_anode880w[1..1] & w_data652w[1..1]), (w_anode880w[0..0] & (! w_data652w[0..0])), w_anode849w[2..2]);
	w_anode890w[] = ( (w_anode890w[2..2] & (! w_data652w[2..2])), (w_anode890w[1..1] & w_data652w[1..1]), (w_anode890w[0..0] & w_data652w[0..0]), w_anode849w[2..2]);
	w_anode900w[] = ( (w_anode900w[2..2] & w_data652w[2..2]), (w_anode900w[1..1] & (! w_data652w[1..1])), (w_anode900w[0..0] & (! w_data652w[0..0])), w_anode849w[2..2]);
	w_anode910w[] = ( (w_anode910w[2..2] & w_data652w[2..2]), (w_anode910w[1..1] & (! w_data652w[1..1])), (w_anode910w[0..0] & w_data652w[0..0]), w_anode849w[2..2]);
	w_anode920w[] = ( (w_anode920w[2..2] & w_data652w[2..2]), (w_anode920w[1..1] & w_data652w[1..1]), (w_anode920w[0..0] & (! w_data652w[0..0])), w_anode849w[2..2]);
	w_anode930w[] = ( (w_anode930w[2..2] & w_data652w[2..2]), (w_anode930w[1..1] & w_data652w[1..1]), (w_anode930w[0..0] & w_data652w[0..0]), w_anode849w[2..2]);
	w_anode941w[] = ( (w_anode941w[1..1] & data_wire[4..4]), (w_anode941w[0..0] & data_wire[3..3]), B"1");
	w_anode951w[] = ( (w_anode951w[2..2] & (! w_data652w[2..2])), (w_anode951w[1..1] & (! w_data652w[1..1])), (w_anode951w[0..0] & (! w_data652w[0..0])), w_anode941w[2..2]);
	w_anode962w[] = ( (w_anode962w[2..2] & (! w_data652w[2..2])), (w_anode962w[1..1] & (! w_data652w[1..1])), (w_anode962w[0..0] & w_data652w[0..0]), w_anode941w[2..2]);
	w_anode972w[] = ( (w_anode972w[2..2] & (! w_data652w[2..2])), (w_anode972w[1..1] & w_data652w[1..1]), (w_anode972w[0..0] & (! w_data652w[0..0])), w_anode941w[2..2]);
	w_anode982w[] = ( (w_anode982w[2..2] & (! w_data652w[2..2])), (w_anode982w[1..1] & w_data652w[1..1]), (w_anode982w[0..0] & w_data652w[0..0]), w_anode941w[2..2]);
	w_anode992w[] = ( (w_anode992w[2..2] & w_data652w[2..2]), (w_anode992w[1..1] & (! w_data652w[1..1])), (w_anode992w[0..0] & (! w_data652w[0..0])), w_anode941w[2..2]);
	w_data652w[2..0] = data_wire[2..0];
END;
--VALID FILE
